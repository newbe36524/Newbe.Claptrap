<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string"/>
                            <xsd:attribute name="type" type="xsd:string"/>
                            <xsd:attribute name="mimetype" type="xsd:string"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string"/>
                            <xsd:attribute name="name" type="xsd:string"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="failed to build claptrap bootstrapper" xml:space="preserve">
        <value>non è riuscito a costruire il programma di avvio automatico claptrap</value>
    </data>
    <data name="failed to activate claptrap {identity}" xml:space="preserve">
        <value>non è riuscito ad attivare claptrap {identity}</value>
    </data>
    <data name="success to notify about event be handled. event version : {version}" xml:space="preserve">
        <value>notificare l'evento. versione evento : {version}</value>
    </data>
    <data name="failed to notify about event be handled. event version : {version}" xml:space="preserve">
        <value>non è stato possibile notificare l'evento. versione evento : {version}</value>
    </data>
    <data name="there is no state snapshot found from state loader" xml:space="preserve">
        <value>non viene trovata alcuna istantanea di stato dal caricatore di stato</value>
    </data>
    <data name="found state snapshot from state loader" xml:space="preserve">
        <value>stato trovato snapshot dal caricatore di stato</value>
    </data>
    <data name="MissingEventHandler" xml:space="preserve">
        <value>Non viene trovato alcun gestore eventi per {eventTypeCode} Pollici {claptrapTypeCode}. Deve essere definito come questo è un servitore e il mater lo invierà a questo. Se non gestisci l'evento, puoi definire {handlerName} per questo evento.</value>
    </data>
    <data name="{name} is required, please set it correctly." xml:space="preserve">
        <value>{name} è necessario, si prega di impostarlo correttamente.</value>
    </data>
    <data name="Type {type} does not implement {componentType}." xml:space="preserve">
        <value>digitare {type} non implementa {componentType}.</value>
    </data>
    <data name="failed to create a claptrap. {identity}" xml:space="preserve">
        <value>non è riuscito a creare un claptrap. {identity}</value>
    </data>
    <data name="IsMinion" xml:space="preserve">
        <value>Questo è un applauso servitore in quanto contiene un design master nel suo design. codice del tipo di master : {typeCode}</value>
    </data>
    <data name="This is a master claptrap. type code : {typeCode}" xml:space="preserve">
        <value>Questo è un maestro claptrap. codice tipo : {typeCode}</value>
    </data>
    <data name="add {provider} as claptrap design provider" xml:space="preserve">
        <value>Aggiungere {provider} come fornitore di design claptrap</value>
    </data>
    <data name="start to scan {assemblyArrayCount} types" xml:space="preserve">
        <value>iniziare a eseguire la scansione {assemblyArrayCount} Tipi</value>
    </data>
    <data name="start to create claptrap design" xml:space="preserve">
        <value>iniziare a creare il design claptrap</value>
    </data>
    <data name="claptrap design store created, start to configure it" xml:space="preserve">
        <value>claptrap design store creato, iniziare a configurarlo</value>
    </data>
    <data name="all designs : {designs}" xml:space="preserve">
        <value>tutti i disegni : {designs}</value>
    </data>
    <data name="start to configure claptrap design store by {configurator}" xml:space="preserve">
        <value>iniziare a configurare il negozio di design claptrap da {configurator}</value>
    </data>
    <data name="found {actorCount} claptrap designs" xml:space="preserve">
        <value>Trovato {actorCount} claptrap disegni</value>
    </data>
    <data name="all designs after configuration: {designs}" xml:space="preserve">
        <value>tutti i disegni dopo la configurazione: {designs}</value>
    </data>
    <data name="start to validate all design in claptrap design store" xml:space="preserve">
        <value>iniziare a convalidare tutto il design in claptrap negozio di design</value>
    </data>
    <data name="all design validated ok" xml:space="preserve">
        <value>tutto il design convalidato ok</value>
    </data>
    <data name="There is a IStringLocalizer found in container, start to use localization in UI culture" xml:space="preserve">
        <value>C'è un IStringLocalizer trovato nel contenitore, iniziare a utilizzare la localizzazione nelle impostazioni cultura dell'interfaccia utenteThere is a IStringLocalizer found in container, start to use localization in UI culture</value>
    </data>
    <data name="There is no IStringLocalizer found in container, start to use default localization in English" xml:space="preserve">
        <value>Non c'è nessun IStringLocalizer trovato nel contenitore, iniziare a utilizzare la localizzazione predefinita in inglese</value>
    </data>
    <data name="Template" xml:space="preserve">
        <value>Modello</value>
    </data>
</root>