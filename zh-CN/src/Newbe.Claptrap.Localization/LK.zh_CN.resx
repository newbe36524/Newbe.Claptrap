<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string"/>
                            <xsd:attribute name="type" type="xsd:string"/>
                            <xsd:attribute name="mimetype" type="xsd:string"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string"/>
                            <xsd:attribute name="name" type="xsd:string"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="failed to build claptrap bootstrapper" xml:space="preserve">
        <value>未能构建拍手引导器</value>
    </data>
    <data name="failed to activate claptrap {identity}" xml:space="preserve">
        <value>未能激活拍手 {identity}</value>
    </data>
    <data name="success to notify about event be handled. event version : {version}" xml:space="preserve">
        <value>成功通知事件被处理。事件版本 ： {version}</value>
    </data>
    <data name="failed to notify about event be handled. event version : {version}" xml:space="preserve">
        <value>未能通知有关事件的处理。事件版本 ： {version}</value>
    </data>
    <data name="there is no state snapshot found from state loader" xml:space="preserve">
        <value>未从状态加载程序找到状态快照</value>
    </data>
    <data name="found state snapshot from state loader" xml:space="preserve">
        <value>从状态加载器找到状态快照</value>
    </data>
    <data name="MissingEventHandler" xml:space="preserve">
        <value>没有找到事件处理程序 {eventTypeCode} 在 {claptrapTypeCode}.它必须被定义，因为这是一个小人，母校将发送它到这个。如果不处理该事件，可以定义 {handlerName} 对于此事件。</value>
    </data>
    <data name="{name} is required, please set it correctly." xml:space="preserve">
        <value>{name} 需要，请正确设置。</value>
    </data>
    <data name="Type {type} does not implement {componentType}." xml:space="preserve">
        <value>类型 {type} 不实现 {componentType}.</value>
    </data>
    <data name="failed to create a claptrap. {identity}" xml:space="preserve">
        <value>未能创建拍手。 {identity}</value>
    </data>
    <data name="IsMinion" xml:space="preserve">
        <value>这是一个小拍手，因为它包含一个主设计，它的设计。主类型代码 ： {typeCode}</value>
    </data>
    <data name="This is a master claptrap. type code : {typeCode}" xml:space="preserve">
        <value>这是一个主拍手。类型代码 ： {typeCode}</value>
    </data>
    <data name="add {provider} as claptrap design provider" xml:space="preserve">
        <value>添加 {provider} 作为拍手设计提供商</value>
    </data>
    <data name="start to scan {assemblyArrayCount} types" xml:space="preserve">
        <value>开始扫描 {assemblyArrayCount} 类型</value>
    </data>
    <data name="start to create claptrap design" xml:space="preserve">
        <value>开始创建拍手设计</value>
    </data>
    <data name="claptrap design store created, start to configure it" xml:space="preserve">
        <value>拍手设计存储创建， 开始配置它</value>
    </data>
    <data name="all designs : {designs}" xml:space="preserve">
        <value>所有设计： {designs}</value>
    </data>
    <data name="start to configure claptrap design store by {configurator}" xml:space="preserve">
        <value>开始配置拍手设计存储 {configurator}</value>
    </data>
    <data name="found {actorCount} claptrap designs" xml:space="preserve">
        <value>发现 {actorCount} 拍手设计</value>
    </data>
    <data name="all designs after configuration: {designs}" xml:space="preserve">
        <value>配置后的所有设计： {designs}</value>
    </data>
    <data name="start to validate all design in claptrap design store" xml:space="preserve">
        <value>开始验证拍手设计商店中的所有设计</value>
    </data>
    <data name="all design validated ok" xml:space="preserve">
        <value>所有设计验证确定</value>
    </data>
    <data name="There is a IStringLocalizer found in container, start to use localization in UI culture" xml:space="preserve">
        <value>容器中存在一个 IString 定位器，在 UI 区域性中开始使用本地化</value>
    </data>
    <data name="There is no IStringLocalizer found in container, start to use default localization in English" xml:space="preserve">
        <value>容器中找不到 IString 定位器，开始使用英语默认本地化</value>
    </data>
    <data name="Template" xml:space="preserve">
        <value>模板</value>
    </data>
</root>