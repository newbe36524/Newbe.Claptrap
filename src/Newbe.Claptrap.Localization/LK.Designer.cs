//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Newbe.Claptrap.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LK {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LK() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Newbe.Claptrap.Localization.LK", typeof(LK).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {name} is required, please set it correctly..
        /// </summary>
        public static string _name__is_required__please_set_it_correctly_ {
            get {
                return ResourceManager.GetString("{name} is required, please set it correctly.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {provider} as claptrap design provider.
        /// </summary>
        public static string add__provider__as_claptrap_design_provider {
            get {
                return ResourceManager.GetString("add {provider} as claptrap design provider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to all design validated ok.
        /// </summary>
        public static string all_design_validated_ok {
            get {
                return ResourceManager.GetString("all design validated ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to all designs : {designs}.
        /// </summary>
        public static string all_designs____designs_ {
            get {
                return ResourceManager.GetString("all designs : {designs}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to all designs after configuration: {designs}.
        /// </summary>
        public static string all_designs_after_configuration___designs_ {
            get {
                return ResourceManager.GetString("all designs after configuration: {designs}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to claptrap design store created, start to configure it.
        /// </summary>
        public static string claptrap_design_store_created__start_to_configure_it {
            get {
                return ResourceManager.GetString("claptrap design store created, start to configure it", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to failed to activate claptrap {identity}.
        /// </summary>
        public static string failed_to_activate_claptrap__identity_ {
            get {
                return ResourceManager.GetString("failed to activate claptrap {identity}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to failed to build claptrap bootstrapper.
        /// </summary>
        public static string failed_to_build_claptrap_bootstrapper {
            get {
                return ResourceManager.GetString("failed to build claptrap bootstrapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to failed to create a claptrap. {identity}.
        /// </summary>
        public static string failed_to_create_a_claptrap___identity_ {
            get {
                return ResourceManager.GetString("failed to create a claptrap. {identity}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to failed to notify about event be handled. event version : {version}.
        /// </summary>
        public static string failed_to_notify_about_event_be_handled__event_version____version_ {
            get {
                return ResourceManager.GetString("failed to notify about event be handled. event version : {version}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to found {actorCount} claptrap designs.
        /// </summary>
        public static string found__actorCount__claptrap_designs {
            get {
                return ResourceManager.GetString("found {actorCount} claptrap designs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to found state snapshot from state loader.
        /// </summary>
        public static string found_state_snapshot_from_state_loader {
            get {
                return ResourceManager.GetString("found state snapshot from state loader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a minion claptrap since it contains a master design in it`s design. master type code : {typeCode}.
        /// </summary>
        public static string IsMinion {
            get {
                return ResourceManager.GetString("IsMinion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no event handler found for {eventTypeCode} in {claptrapTypeCode}. It must be define as this is a minion and the mater will send it to this. If you don`t handle the event, you can define {handlerName} for this event..
        /// </summary>
        public static string MissingEventHandler {
            get {
                return ResourceManager.GetString("MissingEventHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start to configure claptrap design store by {configurator}.
        /// </summary>
        public static string start_to_configure_claptrap_design_store_by__configurator_ {
            get {
                return ResourceManager.GetString("start to configure claptrap design store by {configurator}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start to create claptrap design.
        /// </summary>
        public static string start_to_create_claptrap_design {
            get {
                return ResourceManager.GetString("start to create claptrap design", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start to scan {assemblyArrayCount} types.
        /// </summary>
        public static string start_to_scan__assemblyArrayCount__types {
            get {
                return ResourceManager.GetString("start to scan {assemblyArrayCount} types", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start to validate all design in claptrap design store.
        /// </summary>
        public static string start_to_validate_all_design_in_claptrap_design_store {
            get {
                return ResourceManager.GetString("start to validate all design in claptrap design store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to success to notify about event be handled. event version : {version}.
        /// </summary>
        public static string success_to_notify_about_event_be_handled__event_version____version_ {
            get {
                return ResourceManager.GetString("success to notify about event be handled. event version : {version}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template.
        /// </summary>
        public static string Template {
            get {
                return ResourceManager.GetString("Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a IStringLocalizer found in container, start to use localization in UI culture.
        /// </summary>
        public static string There_is_a_IStringLocalizer_found_in_container__start_to_use_localization_in_UI_culture {
            get {
                return ResourceManager.GetString("There is a IStringLocalizer found in container, start to use localization in UI c" +
                        "ulture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no IStringLocalizer found in container, start to use default localization in English.
        /// </summary>
        public static string There_is_no_IStringLocalizer_found_in_container__start_to_use_default_localization_in_English {
            get {
                return ResourceManager.GetString("There is no IStringLocalizer found in container, start to use default localizatio" +
                        "n in English", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to there is no state snapshot found from state loader.
        /// </summary>
        public static string there_is_no_state_snapshot_found_from_state_loader {
            get {
                return ResourceManager.GetString("there is no state snapshot found from state loader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a master claptrap. type code : {typeCode}.
        /// </summary>
        public static string This_is_a_master_claptrap__type_code____typeCode_ {
            get {
                return ResourceManager.GetString("This is a master claptrap. type code : {typeCode}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {type} does not implement {componentType}..
        /// </summary>
        public static string Type__type__does_not_implement__componentType__ {
            get {
                return ResourceManager.GetString("Type {type} does not implement {componentType}.", resourceCulture);
            }
        }
    }
}
