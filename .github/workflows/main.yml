name: Claptrap build

on:
  push:
    branches: 
      - master
      - develop
      - feature/ci
  pull_request: 
    branches: 
      - master
      - develop

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: |
        cd $GITHUB_WORKSPACE/src
        dotnet restore
    # - name: Build
    #   run: |
    #     cd $GITHUB_WORKSPACE/src
    #     dotnet build --configuration Release --no-restore
    # - name: Test
    #   run: |
    #     cd $GITHUB_WORKSPACE/src
    #     dotnet test --collect:"XPlat Code Coverage" --settings coverlet.runsettings

    - name: Sonarscanner for dotnet
      uses: Secbyte/dotnet-sonarscanner@v2.2
      with:
        buildCommand: dotnet build $GITHUB_WORKSPACE/src --configuration Release
        testCommand: dotnet test $GITHUB_WORKSPACE/src --collect:"XPlat Code Coverage" --settings $GITHUB_WORKSPACE/src/coverlet.runsettings
        projectKey: newbe36524_Newbe.Claptrap
        projectName: Newbe.Claptrap
        sonarOrganisation: newbe36524
        beginArguments: >
            /d:sonar.cs.opencover.reportsPaths='"src/Newbe.Claptrap.Tests/TestResults/*/coverage.opencover.xml"'
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Codecov
      uses: codecov/codecov-action@v1.0.6
      # with:
      #   # User defined upload name. Visible in Codecov UI
      #   name: # optional
      #   # Repository upload token - get it from codecov.io. Required only for private repositories
      #   token: # optional
      #   # Path to coverage file to upload
      #   file: # optional
      #   # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
      #   flags: # optional
      #   # Specify whether or not CI build should fail if Codecov runs into an error during upload
      #   fail_ci_if_error: # optional

    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@0.2.0
      with:
        # Project token for the Codacy project you want to send coverage information
        project-token: ${{ secrets.CODACY_TOKEN }}
        # Optional comma separated list of coverage reports to send to Codacy
        coverage-reports: src/*.Tests/TestResults/*/coverage.opencover.xml # optional, default is 